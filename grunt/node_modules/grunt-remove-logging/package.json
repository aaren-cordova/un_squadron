{
  "name": "grunt-remove-logging",
  "description": "Grunt task to remove console logging statements",
  "version": "0.0.5",
  "homepage": "",
  "author": {
    "name": "Eric Hynds",
    "email": "ehynds@gmail.com",
    "url": "http://erichynds.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ehynds/grunt-remove-logging.git"
  },
  "bugs": {
    "url": "https://github.com/ehynds/grunt-remove-logging/issues"
  },
  "main": "grunt.js",
  "bin": {
    "grunt-remove-logging": "bin/grunt-remove-logging"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "0.3.x"
  },
  "keywords": [
    "gruntplugin",
    "console",
    "log",
    "debugging",
    "remove",
    "statements"
  ],
  "readme": "## About\n\nThis task removes all console logging statements from your source code.\n\n## Getting Started\n\nInstall this plugin with: `grunt install grunt-remove-logging`\n\nNext, add this line to your project's `grunt.js` file:\n\n`grunt.loadNpmTasks(\"grunt-remove-logging\");`\n\nLastly, add the configuration settings (see below) to your grunt.js file.\n\n## Documentation\n\nThis task has two required properties, `src` and `dest`. `src` is the path to your source file and `dest` is the file this task will write to (relative to the grunt.js file). If this file already exists **it will be overwritten**.\n\nAn example configuration looks like this:\n\n```` javascript\ngrunt.initConfig({\n  removelogging: {\n    dist: {\n      src: \"js/application.js\",\n      dest: \"js/application-clean.js\",\n\n      options: {\n        // see below for options. this is optional.\n      }\n    }\n  }\n});\n````\n\n### Optional Configuration Properties\n\nThis plugin can be customized by specifying the following options:\n\n* `replaceWith`: A value to replace console.logging statements with. This defaults to an empty string. If you use fancy statements like `console && console.log(\"foo\");`, you may choose to specify a replaceWith value like `0;` so that your scripts don't completely break.\n* `namespace`: The name of object where logging methods are attached. Defaults to `console`.\n* `methods`: An array of the method names to remove. Defaults to [all the methods](http://getfirebug.com/wiki/index.php/Console_API) in the Firebug console API. This option is useful if you want to strip out all `log` methods, but keep `warn`.\n\n### Skipping Individual Statements\n\nYou can tell this task to keep specific logging statements by adding the comment `/*RemoveLogging:skip*/` after the statement:\n\nconsole.log(\"foo\");/*RemoveLogging:skip*/\n\n- or -\n\nconsole.log(\"foo\")/*RemoveLogging:skip*/;\n",
  "readmeFilename": "README.md",
  "_id": "grunt-remove-logging@0.0.5",
  "_from": "grunt-remove-logging@0.0.x"
}
